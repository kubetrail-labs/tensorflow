// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: tensorflow/core/protobuf/coordination_service.proto

package for_core_protos_go_proto

import (
	device_attributes_go_proto "github.com/tensorflow/tensorflow/tensorflow/go/core/framework/device_attributes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request and response messages for registering a worker to the cluster leader.
// Use `job` and `task` to represent the role of the worker, and use
// `incarnation` to uniquely identify a worker process. Leader responds with its
// `incarnation` to identify a leader process.
type RegisterWorkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job         string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Task        int32  `protobuf:"varint,2,opt,name=task,proto3" json:"task,omitempty"`
	Incarnation uint64 `protobuf:"fixed64,3,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
}

func (x *RegisterWorkerRequest) Reset() {
	*x = RegisterWorkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerRequest) ProtoMessage() {}

func (x *RegisterWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerRequest.ProtoReflect.Descriptor instead.
func (*RegisterWorkerRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterWorkerRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *RegisterWorkerRequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *RegisterWorkerRequest) GetIncarnation() uint64 {
	if x != nil {
		return x.Incarnation
	}
	return 0
}

type RegisterWorkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderIncarnation uint64 `protobuf:"fixed64,1,opt,name=leader_incarnation,json=leaderIncarnation,proto3" json:"leader_incarnation,omitempty"`
}

func (x *RegisterWorkerResponse) Reset() {
	*x = RegisterWorkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterWorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterWorkerResponse) ProtoMessage() {}

func (x *RegisterWorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterWorkerResponse.ProtoReflect.Descriptor instead.
func (*RegisterWorkerResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterWorkerResponse) GetLeaderIncarnation() uint64 {
	if x != nil {
		return x.LeaderIncarnation
	}
	return 0
}

// Request and response messages for sending heartbeats.
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job         string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Task        int32  `protobuf:"varint,2,opt,name=task,proto3" json:"task,omitempty"`
	Incarnation uint64 `protobuf:"fixed64,3,opt,name=incarnation,proto3" json:"incarnation,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *HeartbeatRequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *HeartbeatRequest) GetIncarnation() uint64 {
	if x != nil {
		return x.Incarnation
	}
	return 0
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderIncarnation uint64 `protobuf:"fixed64,1,opt,name=leader_incarnation,json=leaderIncarnation,proto3" json:"leader_incarnation,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatResponse) GetLeaderIncarnation() uint64 {
	if x != nil {
		return x.LeaderIncarnation
	}
	return 0
}

// Request and response messages for waiting for all tasks.
type WaitForAllTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job  string `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Task int32  `protobuf:"varint,2,opt,name=task,proto3" json:"task,omitempty"`
	// All local device attributes on the request sender.
	LocalDeviceAttributes []*device_attributes_go_proto.DeviceAttributes `protobuf:"bytes,3,rep,name=local_device_attributes,json=localDeviceAttributes,proto3" json:"local_device_attributes,omitempty"`
}

func (x *WaitForAllTasksRequest) Reset() {
	*x = WaitForAllTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForAllTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForAllTasksRequest) ProtoMessage() {}

func (x *WaitForAllTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForAllTasksRequest.ProtoReflect.Descriptor instead.
func (*WaitForAllTasksRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{4}
}

func (x *WaitForAllTasksRequest) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *WaitForAllTasksRequest) GetTask() int32 {
	if x != nil {
		return x.Task
	}
	return 0
}

func (x *WaitForAllTasksRequest) GetLocalDeviceAttributes() []*device_attributes_go_proto.DeviceAttributes {
	if x != nil {
		return x.LocalDeviceAttributes
	}
	return nil
}

type WaitForAllTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderIncarnation uint64 `protobuf:"fixed64,1,opt,name=leader_incarnation,json=leaderIncarnation,proto3" json:"leader_incarnation,omitempty"`
	// All devices in the cluster.
	ClusterDeviceAttributes []*device_attributes_go_proto.DeviceAttributes `protobuf:"bytes,2,rep,name=cluster_device_attributes,json=clusterDeviceAttributes,proto3" json:"cluster_device_attributes,omitempty"`
}

func (x *WaitForAllTasksResponse) Reset() {
	*x = WaitForAllTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForAllTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForAllTasksResponse) ProtoMessage() {}

func (x *WaitForAllTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForAllTasksResponse.ProtoReflect.Descriptor instead.
func (*WaitForAllTasksResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{5}
}

func (x *WaitForAllTasksResponse) GetLeaderIncarnation() uint64 {
	if x != nil {
		return x.LeaderIncarnation
	}
	return 0
}

func (x *WaitForAllTasksResponse) GetClusterDeviceAttributes() []*device_attributes_go_proto.DeviceAttributes {
	if x != nil {
		return x.ClusterDeviceAttributes
	}
	return nil
}

// Request and response messages for reporting errors to task.
type ReportErrorToAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SourceJob    string `protobuf:"bytes,3,opt,name=source_job,json=sourceJob,proto3" json:"source_job,omitempty"`
	SourceTask   int32  `protobuf:"varint,4,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *ReportErrorToAgentRequest) Reset() {
	*x = ReportErrorToAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToAgentRequest) ProtoMessage() {}

func (x *ReportErrorToAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToAgentRequest.ProtoReflect.Descriptor instead.
func (*ReportErrorToAgentRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReportErrorToAgentRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ReportErrorToAgentRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReportErrorToAgentRequest) GetSourceJob() string {
	if x != nil {
		return x.SourceJob
	}
	return ""
}

func (x *ReportErrorToAgentRequest) GetSourceTask() int32 {
	if x != nil {
		return x.SourceTask
	}
	return 0
}

type ReportErrorToAgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportErrorToAgentResponse) Reset() {
	*x = ReportErrorToAgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToAgentResponse) ProtoMessage() {}

func (x *ReportErrorToAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToAgentResponse.ProtoReflect.Descriptor instead.
func (*ReportErrorToAgentResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{7}
}

// Request and response messages for reporting errors to service instance.
type ReportErrorToServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorCode    int32  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	SourceJob    string `protobuf:"bytes,3,opt,name=source_job,json=sourceJob,proto3" json:"source_job,omitempty"`
	SourceTask   int32  `protobuf:"varint,4,opt,name=source_task,json=sourceTask,proto3" json:"source_task,omitempty"`
}

func (x *ReportErrorToServiceRequest) Reset() {
	*x = ReportErrorToServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToServiceRequest) ProtoMessage() {}

func (x *ReportErrorToServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToServiceRequest.ProtoReflect.Descriptor instead.
func (*ReportErrorToServiceRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReportErrorToServiceRequest) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ReportErrorToServiceRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReportErrorToServiceRequest) GetSourceJob() string {
	if x != nil {
		return x.SourceJob
	}
	return ""
}

func (x *ReportErrorToServiceRequest) GetSourceTask() int32 {
	if x != nil {
		return x.SourceTask
	}
	return 0
}

type ReportErrorToServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportErrorToServiceResponse) Reset() {
	*x = ReportErrorToServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportErrorToServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportErrorToServiceResponse) ProtoMessage() {}

func (x *ReportErrorToServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportErrorToServiceResponse.ProtoReflect.Descriptor instead.
func (*ReportErrorToServiceResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{9}
}

// Message for configuration key value.
// Key is structured like Unix file system, with multiple levels of directory
// names separated by the slash ('/') characters.
type KeyValueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValueEntry) Reset() {
	*x = KeyValueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueEntry) ProtoMessage() {}

func (x *KeyValueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueEntry.ProtoReflect.Descriptor instead.
func (*KeyValueEntry) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{10}
}

func (x *KeyValueEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValueEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request and response messages for inserting configuration key-value data.
type InsertKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv *KeyValueEntry `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *InsertKeyValueRequest) Reset() {
	*x = InsertKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertKeyValueRequest) ProtoMessage() {}

func (x *InsertKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertKeyValueRequest.ProtoReflect.Descriptor instead.
func (*InsertKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{11}
}

func (x *InsertKeyValueRequest) GetKv() *KeyValueEntry {
	if x != nil {
		return x.Kv
	}
	return nil
}

type InsertKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InsertKeyValueResponse) Reset() {
	*x = InsertKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertKeyValueResponse) ProtoMessage() {}

func (x *InsertKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertKeyValueResponse.ProtoReflect.Descriptor instead.
func (*InsertKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{12}
}

// Request and response messages for getting configuration key-value data.
type GetKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKeyValueRequest) Reset() {
	*x = GetKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyValueRequest) ProtoMessage() {}

func (x *GetKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyValueRequest.ProtoReflect.Descriptor instead.
func (*GetKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetKeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kv *KeyValueEntry `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
}

func (x *GetKeyValueResponse) Reset() {
	*x = GetKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyValueResponse) ProtoMessage() {}

func (x *GetKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyValueResponse.ProtoReflect.Descriptor instead.
func (*GetKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetKeyValueResponse) GetKv() *KeyValueEntry {
	if x != nil {
		return x.Kv
	}
	return nil
}

// Request and response messages for deleting configuration key-value data.
// When is_directory is true, delete key-values recursively under `key`.
type DeleteKeyValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IsDirectory bool   `protobuf:"varint,2,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
}

func (x *DeleteKeyValueRequest) Reset() {
	*x = DeleteKeyValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyValueRequest) ProtoMessage() {}

func (x *DeleteKeyValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyValueRequest.ProtoReflect.Descriptor instead.
func (*DeleteKeyValueRequest) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteKeyValueRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteKeyValueRequest) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

type DeleteKeyValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteKeyValueResponse) Reset() {
	*x = DeleteKeyValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteKeyValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteKeyValueResponse) ProtoMessage() {}

func (x *DeleteKeyValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteKeyValueResponse.ProtoReflect.Descriptor instead.
func (*DeleteKeyValueResponse) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP(), []int{16}
}

var File_tensorflow_core_protobuf_coordination_service_proto protoreflect.FileDescriptor

var file_tensorflow_core_protobuf_coordination_service_proto_rawDesc = []byte{
	0x0a, 0x33, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x1a, 0x31, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x47, 0x0a, 0x16, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x42, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01, 0x0a, 0x16, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f,
	0x62, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x54, 0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x52, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x17,
	0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x63, 0x61, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x61, 0x72,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x19, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x17, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x22, 0x9f, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6a, 0x6f, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x6f,
	0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xa1, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6a,
	0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4a, 0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a,
	0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b,
	0x76, 0x22, 0x18, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x22, 0x40, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x02, 0x6b, 0x76,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x02, 0x6b, 0x76, 0x22, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe6, 0x05,
	0x0a, 0x13, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x57, 0x61, 0x69, 0x74,
	0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x61, 0x69,
	0x74, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x6f, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x14, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x27, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x21, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x57, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_protobuf_coordination_service_proto_rawDescOnce sync.Once
	file_tensorflow_core_protobuf_coordination_service_proto_rawDescData = file_tensorflow_core_protobuf_coordination_service_proto_rawDesc
)

func file_tensorflow_core_protobuf_coordination_service_proto_rawDescGZIP() []byte {
	file_tensorflow_core_protobuf_coordination_service_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_protobuf_coordination_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_protobuf_coordination_service_proto_rawDescData)
	})
	return file_tensorflow_core_protobuf_coordination_service_proto_rawDescData
}

var file_tensorflow_core_protobuf_coordination_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_tensorflow_core_protobuf_coordination_service_proto_goTypes = []interface{}{
	(*RegisterWorkerRequest)(nil),                       // 0: tensorflow.RegisterWorkerRequest
	(*RegisterWorkerResponse)(nil),                      // 1: tensorflow.RegisterWorkerResponse
	(*HeartbeatRequest)(nil),                            // 2: tensorflow.HeartbeatRequest
	(*HeartbeatResponse)(nil),                           // 3: tensorflow.HeartbeatResponse
	(*WaitForAllTasksRequest)(nil),                      // 4: tensorflow.WaitForAllTasksRequest
	(*WaitForAllTasksResponse)(nil),                     // 5: tensorflow.WaitForAllTasksResponse
	(*ReportErrorToAgentRequest)(nil),                   // 6: tensorflow.ReportErrorToAgentRequest
	(*ReportErrorToAgentResponse)(nil),                  // 7: tensorflow.ReportErrorToAgentResponse
	(*ReportErrorToServiceRequest)(nil),                 // 8: tensorflow.ReportErrorToServiceRequest
	(*ReportErrorToServiceResponse)(nil),                // 9: tensorflow.ReportErrorToServiceResponse
	(*KeyValueEntry)(nil),                               // 10: tensorflow.KeyValueEntry
	(*InsertKeyValueRequest)(nil),                       // 11: tensorflow.InsertKeyValueRequest
	(*InsertKeyValueResponse)(nil),                      // 12: tensorflow.InsertKeyValueResponse
	(*GetKeyValueRequest)(nil),                          // 13: tensorflow.GetKeyValueRequest
	(*GetKeyValueResponse)(nil),                         // 14: tensorflow.GetKeyValueResponse
	(*DeleteKeyValueRequest)(nil),                       // 15: tensorflow.DeleteKeyValueRequest
	(*DeleteKeyValueResponse)(nil),                      // 16: tensorflow.DeleteKeyValueResponse
	(*device_attributes_go_proto.DeviceAttributes)(nil), // 17: tensorflow.DeviceAttributes
}
var file_tensorflow_core_protobuf_coordination_service_proto_depIdxs = []int32{
	17, // 0: tensorflow.WaitForAllTasksRequest.local_device_attributes:type_name -> tensorflow.DeviceAttributes
	17, // 1: tensorflow.WaitForAllTasksResponse.cluster_device_attributes:type_name -> tensorflow.DeviceAttributes
	10, // 2: tensorflow.InsertKeyValueRequest.kv:type_name -> tensorflow.KeyValueEntry
	10, // 3: tensorflow.GetKeyValueResponse.kv:type_name -> tensorflow.KeyValueEntry
	0,  // 4: tensorflow.CoordinationService.RegisterWorker:input_type -> tensorflow.RegisterWorkerRequest
	2,  // 5: tensorflow.CoordinationService.Heartbeat:input_type -> tensorflow.HeartbeatRequest
	4,  // 6: tensorflow.CoordinationService.WaitForAllTasks:input_type -> tensorflow.WaitForAllTasksRequest
	6,  // 7: tensorflow.CoordinationService.ReportErrorToAgent:input_type -> tensorflow.ReportErrorToAgentRequest
	8,  // 8: tensorflow.CoordinationService.ReportErrorToService:input_type -> tensorflow.ReportErrorToServiceRequest
	11, // 9: tensorflow.CoordinationService.InsertKeyValue:input_type -> tensorflow.InsertKeyValueRequest
	13, // 10: tensorflow.CoordinationService.GetKeyValue:input_type -> tensorflow.GetKeyValueRequest
	15, // 11: tensorflow.CoordinationService.DeleteKeyValue:input_type -> tensorflow.DeleteKeyValueRequest
	1,  // 12: tensorflow.CoordinationService.RegisterWorker:output_type -> tensorflow.RegisterWorkerResponse
	3,  // 13: tensorflow.CoordinationService.Heartbeat:output_type -> tensorflow.HeartbeatResponse
	5,  // 14: tensorflow.CoordinationService.WaitForAllTasks:output_type -> tensorflow.WaitForAllTasksResponse
	7,  // 15: tensorflow.CoordinationService.ReportErrorToAgent:output_type -> tensorflow.ReportErrorToAgentResponse
	9,  // 16: tensorflow.CoordinationService.ReportErrorToService:output_type -> tensorflow.ReportErrorToServiceResponse
	12, // 17: tensorflow.CoordinationService.InsertKeyValue:output_type -> tensorflow.InsertKeyValueResponse
	14, // 18: tensorflow.CoordinationService.GetKeyValue:output_type -> tensorflow.GetKeyValueResponse
	16, // 19: tensorflow.CoordinationService.DeleteKeyValue:output_type -> tensorflow.DeleteKeyValueResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_tensorflow_core_protobuf_coordination_service_proto_init() }
func file_tensorflow_core_protobuf_coordination_service_proto_init() {
	if File_tensorflow_core_protobuf_coordination_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterWorkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterWorkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForAllTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForAllTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToAgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportErrorToServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_protobuf_coordination_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteKeyValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_protobuf_coordination_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tensorflow_core_protobuf_coordination_service_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_protobuf_coordination_service_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_protobuf_coordination_service_proto_msgTypes,
	}.Build()
	File_tensorflow_core_protobuf_coordination_service_proto = out.File
	file_tensorflow_core_protobuf_coordination_service_proto_rawDesc = nil
	file_tensorflow_core_protobuf_coordination_service_proto_goTypes = nil
	file_tensorflow_core_protobuf_coordination_service_proto_depIdxs = nil
}
